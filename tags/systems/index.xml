<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>systems on :)</title><link>https://abundance-io.github.io/tags/systems/</link><description>Recent content in systems on :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 15 Oct 2022 12:46:12 +0100</lastBuildDate><atom:link href="https://abundance-io.github.io/tags/systems/index.xml" rel="self" type="application/rss+xml"/><item><title>recommendation systems</title><link>https://abundance-io.github.io/projects/spotify_competition/</link><pubDate>Sat, 15 Oct 2022 12:46:12 +0100</pubDate><guid>https://abundance-io.github.io/projects/spotify_competition/</guid><description>I&amp;rsquo;ve been thinking a lot recently about how most machine learning projects in production aren&amp;rsquo;t just about getting that one classifier neural network or something like that to work
it usually involves building intricately complex systems with different with different architectures that usually piece together to make something big and beautiful(for the most part)
A weird mistake a lot of ML practicioners(or at the very least just me ) make is that they tend to loose focus on the bigger picture and forget to make the things that would actually make their models functional &amp;hellip;.</description><content>&lt;p>I&amp;rsquo;ve been thinking a lot recently about how most machine learning projects in production
aren&amp;rsquo;t just about getting that one classifier neural network or something like that to work&lt;br>
it usually involves building intricately complex systems with different
with different architectures that usually piece together to make something big and beautiful(for the most part)&lt;/p>
&lt;p>A weird mistake a lot of ML practicioners(or at the very least just me ) make is that they tend to loose focus on the bigger picture
and forget to make the things that would actually make their models functional &amp;hellip;.&lt;/p>
&lt;p>so in the light of getting better at solving problems end to end with machine learning
I decided to implement an industry level(i&amp;rsquo;m probably being generous here) recommendation system&lt;/p>
&lt;p>finding one to implement was pretty hard tbh&lt;/p>
&lt;p>at first i thought i&amp;rsquo;d try netflix
()&lt;/p></content></item></channel></rss>